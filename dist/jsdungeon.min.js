/**
 * jsdungeon - JSdungeon is a text-based adventure game engine. You can create your own dungeons by configuring them in JSON. Examples are in the repository, and you're free to take a modify them for your own use.
 * @version v1.1.0
 * @link https://github.com/jaaimino/jsdungeon#readme
 * @license ISC
 */
function chooseAdventure(){try{var e=document.getElementById("adventureSelect"),t=e.options[e.selectedIndex].value;return loadJSON(t,function(e){var t=JSON.parse(e);return startGame(t),!1}),!1}catch(r){return console.log(r),!1}}function startGame(e){game_over=!1,currentDungeon=e,setBackgroungImage(currentDungeon.background?currentDungeon.background:"img/dungeon.jpg"),document.getElementById("page-title").innerHTML=getCurrentDungeon().name;var t="<b>{0}</b>".format(getCurrentDungeon().name);document.getElementById("page-title-inner").innerHTML=t,getCurrentDungeon().currentRoom?(clearOutput(),outputRoom()):(getCurrentDungeon().currentRoom=getCurrentDungeon().rooms[getCurrentDungeon().start_room],getCurrentDungeon().player?(getCurrentDungeon().currentPlayer=getCurrentDungeon().player,getCurrentDungeon().currentPlayer.inventory||(getCurrentDungeon().currentPlayer.inventory=[]),getCurrentDungeon().currentPlayer.description||(getCurrentDungeon().currentPlayer.description="A person.")):getCurrentDungeon().currentPlayer={name:"Jim",description:"A person",inventory:[]},clearOutput(),examine_self(),outputRoom())}function loadGameButton(){var e=document.getElementById("adventureSelect"),t=e.options[e.selectedIndex].text,r=loadGame(t);return null!==r?(startGame(r),output("<i>Game loaded for {0}</i>".format(t))):output("Couldn't load save for dungeon "+t),!1}function saveGameButton(){var e=document.getElementById("adventureSelect"),t=e.options[e.selectedIndex].text;return saveGame(t,getCurrentDungeon()),output("<i>Saved game for {0}</i>".format(t)),!1}function gameloop(e){parseInput(e)}function look(){outputRoom()}function outputRoom(){getCurrentRoom().name&&output("<span class='room-name'>{0}</span>".format(getCurrentRoom().name));var e="";e+=getCurrentRoom().description+" ";for(var t in getCurrentRoom().objects)if(getCurrentRoom().objects.hasOwnProperty(t)){var r=getCurrentRoom().objects[t].current_state;getCurrentRoom().objects[t].states[r].description&&(e+=getCurrentRoom().objects[t].states[r].description+" ")}if(getCurrentRoom().items)for(var n=0;n<getCurrentRoom().items.length;n++){var o=getCurrentRoom().items[n],u=getCurrentDungeon().items[o].current_state;getCurrentDungeon().items[o].states[u].description&&(e+=getCurrentDungeon().items[o].states[u].description+" ")}for(var t in getCurrentRoom().exits)if(getCurrentRoom().exits.hasOwnProperty(t)){var i=getCurrentRoom().exits[t].current_state;getCurrentRoom().exits[t].states[i].description&&(e+=getCurrentRoom().exits[t].states[i].description+" ")}output(e)}function move(e){if(getCurrentRoom().exits&&check_exist(getCurrentRoom().exits[e],"destination")){var t=getCurrentState(e,"exits",getCurrentRoom()),r=getCurrentRoom().exits[e].states[t];r.open?"true"===r.open?leave_room(r,e):(console.log("Uh oh"),r.examination&&output(r.examination+" ")):leave_room(r,e)}else output("You can't go {0}!".format(e))}function leave_room(e,t){output_break(),e.on_enter&&(e.on_enter.description&&output(e.on_enter.description),e.on_enter.triggers&&looptriggers(e.on_enter.triggers)),getCurrentDungeon().currentRoom=getCurrentDungeon().rooms[getCurrentRoom().exits[t].destination],outputRoom()}function inventory(){if(currentDungeon.currentPlayer.inventory.length>0){outputString="";for(var e=0;e<currentDungeon.currentPlayer.inventory.length-1;e++)outputString+="<i>"+currentDungeon.currentPlayer.inventory[e]+"</i>, ";outputString+="<i>"+currentDungeon.currentPlayer.inventory[currentDungeon.currentPlayer.inventory.length-1]+"</i>",output("inventory: {0}".format(outputString))}else output("Your inventory is empty!")}function use(e,t){if(t)use_x_on_y(e,t);else if(check_exist(getCurrentDungeon().items,e))if(-1!=currentDungeon.currentPlayer.inventory.indexOf(e)){var r=getCurrentState(e,"items",getCurrentDungeon());use_X(e,r,"items",getCurrentDungeon())}else output("You don't have {0}!".format(e));else if(check_exist(getCurrentRoom().objects,e)){var r=getCurrentState(e,"objects",getCurrentRoom());use_X(e,r,"objects",getCurrentRoom())}else output("You don't have {0}!".format(e))}function use_x_on_y(e,t){check_exist(getCurrentDungeon().items,t)?-1!=currentDungeon.currentPlayer.inventory.indexOf(t)?use_type("items",e,t,getCurrentDungeon()):output("You don't have {0} in your inventory.".format(t)):check_exist(getCurrentRoom().exits,t)?use_type("exits",e,t,getCurrentRoom()):check_exist(getCurrentRoom().objects,t)?use_type("objects",e,t,getCurrentRoom()):output("You do nothing with {0} or {1} as {1} doesn't exist.".format(e,t))}function use_type(e,t,r,n){if(-1!=currentDungeon.currentPlayer.inventory.indexOf(t)){var o=getCurrentState(r,e,n);if(useable(r,o,e,n)){var u=n[e][r].states[o].on_use.triggers,i=getCurrentState(t,"items",getCurrentDungeon());trigger_action(t,r,u,i)}else output("You can't do anything to {0} with {1}.".format(r,t))}else output("You don't have {0} in your inventory.".format(t))}function use_X(e,t,r,n){if(useable(e,t,r,n))for(var o=n[r][e].states[t].on_use.triggers,u=0;u<o.length;u++)o[u].requires||(process_trigger(o[u]),o[u].single_trigger&&"true"===o[u].single_trigger&&(o.splice(u,1),u-=1));else output("Nothing interesting happened.")}function take(e){if(getCurrentRoom().items&&-1!=getCurrentRoom().items.indexOf(e))return currentDungeon.currentPlayer.inventory.push(e),getCurrentRoom().items.splice(getCurrentRoom().items.indexOf(e),1),void output("You picked up <i>{0}</i>.".format(e));if(check_exist(getCurrentRoom().objects,e)){var t=getCurrentState(e,"objects",getCurrentRoom()),r=getCurrentRoom().objects[e].states[t];if(r.fail_pickup)return void output(r.fail_pickup);output("You can't carry the {0}!".format(e))}else output("You fumbled around but only found air.")}function examine_self(){output("Your name is "+currentDungeon.currentPlayer.name+". "+currentDungeon.currentPlayer.description),output(getCurrentDungeon().intro_text)}function examine(e){if("self"===e)examine_self();else if(check_exist(getCurrentRoom().objects,e)){var t=getCurrentState(e,"objects",getCurrentRoom()),r=getCurrentRoom().objects[e].states[t];lookatthing(r)}else if(-1!=currentDungeon.currentPlayer.inventory.indexOf(e)||getCurrentRoom().items&&-1!=getCurrentRoom().items.indexOf(e)){var t=getCurrentState(e,"items",getCurrentDungeon()),n=getCurrentDungeon().items[e].states[t];lookatthing(n)}else if(check_exist(getCurrentRoom().exits,e)){var t=getCurrentState(e,"exits",getCurrentRoom()),o=getCurrentRoom().exits[e].states[t];lookatthing(o)}else output("There's nothing in this room like that!")}function lookatthing(e){if(e.on_examine){var t=!0;e.on_examine.description&&(output(e.on_examine.description),t=!1),e.on_examine.triggers&&(looptriggers(e.on_examine.triggers),t=!1),t&&output("There doesn't seem to be anything interesting about {0}...".format(e))}else output(e.examination?e.examination:"There doesn't seem to be anything interesting about {0}...".format(e))}function talk(e){if(check_exist(getCurrentRoom().objects,e)){var t=getCurrentState(e,"objects",getCurrentRoom()),r=getCurrentRoom().objects[e].states[t],n=!0;check_exist(r.on_talk,"description")&&(output(r.on_talk.description),n=!1),check_exist(r.on_talk,"triggers")&&(n=!1,looptriggers(r.on_talk.triggers)),n&&output("There was nothing much to say.")}else output("You couldn't figure out how to talk to that.")}function help(){output("Your available actions are as follows: <br><i>look</i> - describes the room <br><i>go</i> (direction) - attempts to leave the room in that direction <br><i>examine</i> (item, object, direction) - examines an object <br><i>search</i> (item, object, direction) - searches an object <br><i>open</i> (item, object, direction) - opens an object <br><i>take</i> (item) - attempts to take an object <br><i>use</i> (object, direction, item) - use something <br><i>use</i> (item) <i>on</i> (object, direction, item) - use something on something <br><i>give</i> (item) <i>to</i> (object, direction, item) - give something to something <br><i>talk (to)</i> (object, direciton, item) - talks to something <br><i>inventory</i> - checks your current items <br><i>help</i> - displays this message! <br>")}function error(e){output("{0} doesn't exist here!".format(e))}function getObjects(e){return e?getCurrentDungeon().rooms[e].objects:getCurrentRoom().objects}function getItems(){return getCurrentDungeon().items}function getRoomItems(e){return e?getCurrentDungeon().rooms[e].items:getCurrentRoom().items}function getExits(e){return e?getCurrentDungeon().rooms[e].exits:getCurrentRoom().exits}function getCurrentPlayer(){return getCurrentDungeon().currentPlayer}function getCurrentDungeon(){return currentDungeon}function getCurrentRoom(){return getCurrentDungeon().currentRoom}function isGameOver(){return game_over}function endGame(){game_over=!0}function getCurrentState(e,t,r){return"items"===t?r.items[e].current_state:"objects"===t?r.objects[e].current_state:"exits"===t?r.exits[e].current_state:void 0}function useable(e,t,r,n){return"items"===r?n.items[e].states[t].on_use&&n.items[e].states[t].on_use.triggers:"objects"===r?n.objects[e].states[t].on_use&&n.objects[e].states[t].on_use.triggers:"exits"===r?n.exits[e].states[t].on_use&&n.exits[e].states[t].on_use.triggers:void 0}function trigger_action(e,t,r,n){for(var o=!0,u=0;u<r.length;u++)r[u].requires&&r[u].requires===e&&r[u].requires_state===n&&(process_trigger(r[u]),o=!1,r[u].single_trigger&&"true"===r[u].single_trigger&&(r.splice(u,1),u-=1));o&&output("You used {0} on {1} to no effect.".format(e,t))}function looptriggers(e){for(var t=0;t<e.length;t++){var r=!1;if(process_trigger(e[t]),e[t].trigger_blocking&&"true"===e[t].trigger_blocking&&(r=!0),e[t].single_trigger&&"true"===e[t].single_trigger&&(e.splice(t,1),t-=1),r)return}}function check_exist(e,t){return!(!e||!e[t])}function check_context(e,t){var r=function(){t?use(t,e):use(e)};getItems()[e]?r():getCurrentRoom().objects[e]?r():getCurrentRoom().exits[e]?move(e):error(e)}function sendInput(){try{if(isGameOver())return output("Game is over. Please start a new one."),clearInputBox(),scrollToBottom(),!1;if(null===getCurrentDungeon())return output("Please start a dungeon below."),clearInputBox(),scrollToBottom(),!1;gameloop(getInput()),clearInputBox(),scrollToBottom()}catch(e){return console.log(e),output("Uh oh! There was an error!"),clearInputBox(),!1}return!1}function getInput(){return document.getElementById("inputBox").value}function scrollToBottom(){var e=document.getElementById("output");e.scrollTop=e.scrollHeight}function clearInputBox(){document.getElementById("inputBox").value=""}function output(e){document.getElementById("output").innerHTML+="<p class='entry'>"+e+"</p>"}function output_break(e){document.getElementById("output").innerHTML+="<p class='break'/>"}function clearOutput(){document.getElementById("output").innerHTML=""}function loadJSON(e,t){var r=new XMLHttpRequest;r.overrideMimeType("application/json"),r.open("GET",e+"?nocache="+(new Date).getTime(),!0),r.onreadystatechange=function(){4==r.readyState&&"200"==r.status&&t(r.responseText)},r.send(null)}function setBackgroungImage(e){var t="url("+e+")";document.body.style.backgroundImage=t}function parseInput(e){if(reg.move.test(e)){var t=reg.move.exec(e);return void move(t[1])}if(reg.talk.test(e)){var t=reg.talk.exec(e);return void talk(t[1])}if(reg.examine.test(e)){var t=reg.examine.exec(e);return void examine(t[1])}if(reg.take.test(e)){var t=reg.take.exec(e);return void take(t[1])}if(reg.use.test(e)){var t=reg.use.exec(e);return void use(t[1],t[2])}if(reg.context.test(e)){var t=reg.context.exec(e);return void check_context(t[1],t[2])}return reg.look.test(e)?void look():reg.inventory.test(e)?void inventory():reg.help.test(e)?void help():void(reg.whitespace.test(e)&&output("I'm not sure how to {0}! (Type help to see commands)".format(e)))}function saveGame(e,t){t.currentPlayer=getCurrentPlayer(),localStorage.setItem(e,JSON.stringify(t))}function loadGame(e){try{var t=JSON.parse(localStorage.getItem(e));return t}catch(r){return console.log(r),null}return null}function process_trigger(e){"state_change"===e.trigger_type?trigger_change_state(e):"flavor_text"===e.trigger_type?trigger_flavor_text(e):"lose_game"===e.trigger_type?trigger_lose_game(e):"win_game"===e.trigger_type?trigger_win_game(e):"add_item"===e.trigger_type?trigger_add_item(e):"remove_item"===e.trigger_type?trigger_remove_item(e):console.log("malformed trigger")}function getTargetGroup(e){return"objects"===e.target_type?e.target_room?getObjects(e.target_room):getObjects():"items"===e.target_type?getItems():"exits"===e.target_type?e.target_room?getExits(e.target_room):getExits():void 0}function trigger_flavor_text(e){e.text?output(e.text):e.description&&output(e.description)}function trigger_change_state(e){var t=getTargetGroup(e);e.target_state?e.target_state===t[e.target].current_state&&changestate(e):changestate(e)}function changestate(e){var t=getTargetGroup(e);t[e.target].current_state=e.new_state,e.description&&output(e.description)}function trigger_add_item(e){var t=e.target_item;getCurrentDungeon().player.inventory.push(t),e.description&&output(e.description)}function trigger_remove_item(e){var t=e.target_item;getCurrentDungeon().player.inventory.remove(t),e.description&&output(e.description)}function trigger_lose_game(e){output(e.description?"{0} Choose a dungeon and start a new game below.".format(e.description):"You have died. Choose a dungeon and start a new game below."),endGame()}function trigger_win_game(e){output(e.description?"{0} Choose a dungeon and start a new game below.".format(e.description):"Congratulations! You've completed the dungeon. Start a new game below."),endGame()}var select=document.getElementById("adventureSelect");loadJSON("dungeons.json",function(e){for(var t=JSON.parse(e),r=t.dungeons,n=0;n<r.length;n++){var o=r[n],u=document.createElement("option");u.textContent=o.name,u.value=o.filename,select.appendChild(u)}});var game_over=!1,currentDungeon=null;String.prototype.format||(String.prototype.format=function(){var e=arguments;return this.replace(/{(\d+)}/g,function(t,r){return"undefined"!=typeof e[r]?e[r]:t})}),Array.prototype.remove=function(e){var t=this.indexOf(e);t>-1&&this.splice(t,1)},Array.prototype.removeAll=function(e){for(var t=this.indexOf(e);t>-1;){this.splice(t,1);var t=this.indexOf(e)}};var reg={move:/(?:move|enter|go|skedaddle|sally forth|proceed|exit(?: through)?) +(.*)/i,talk:/(?:talk|chat)(?: to)? +(.*)/i,examine:/(?:examine|check|scrutinize|look|inspect) +(.*)/i,take:/(?:take|grab|snatch|get|pick up) +(.*)/i,use:/(?:search|use|combine|try|give) +(.+?)(?: +(?:on|with|and|for|to|a) +(.+?))?$/i,context:/(?:open) +(.+?)(?: +(?:with|and|for|to|a) +(.+?))?$/i,look:/(?:look|review|survey)/i,inventory:/inventory/i,help:/help/i,whitespace:/\S/};